<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="d6/d5d/classbanita_1_1_kernel" kind="class" language="C++" prot="public">
    <compoundname>banita::Kernel</compoundname>
    <includes refid="dd/d8b/_kernel_8hpp" local="no">Kernel.hpp</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="d6/d5d/classbanita_1_1_kernel_1a0ba07b0f218ce93f31fc53feb9905354" prot="private" static="no">
        <type>std::multiset&lt; <ref refid="d8/dfd/classbanita_1_1_task" kindref="compound">Task</ref> * &gt;</type>
        <definition>using banita::Kernel::Task_Set =  std::multiset&lt; Task * &gt;</definition>
        <argsstring></argsstring>
        <name>Task_Set</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="headers/Kernel.hpp" line="25" column="1" bodyfile="headers/Kernel.hpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d6/d5d/classbanita_1_1_kernel_1a5c6be97e502b13a7edbcd3890e453275" prot="private" static="no" mutable="no">
        <type>Task_Set</type>
        <definition>Task_Set banita::Kernel::tasks</definition>
        <argsstring></argsstring>
        <name>tasks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="headers/Kernel.hpp" line="28" column="1" bodyfile="headers/Kernel.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d5d/classbanita_1_1_kernel_1a5b82b4ee2beeef6ae32c2a8e0da71c7e" prot="private" static="no" mutable="no">
        <type><ref refid="da/d56/classbanita_1_1_scene" kindref="compound">Scene</ref> *</type>
        <definition>Scene* banita::Kernel::scene</definition>
        <argsstring></argsstring>
        <name>scene</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="headers/Kernel.hpp" line="29" column="1" bodyfile="headers/Kernel.hpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d5d/classbanita_1_1_kernel_1a1936c88e7bd16ac2d88ce3e8e99d6ad0" prot="private" static="no" mutable="no">
        <type>Timer</type>
        <definition>Timer banita::Kernel::timer</definition>
        <argsstring></argsstring>
        <name>timer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="headers/Kernel.hpp" line="31" column="1" bodyfile="headers/Kernel.hpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d5d/classbanita_1_1_kernel_1a8022e824208332e6df1aa8aecf3b0ed6" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float banita::Kernel::time</definition>
        <argsstring></argsstring>
        <name>time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="headers/Kernel.hpp" line="32" column="1" bodyfile="headers/Kernel.hpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d5d/classbanita_1_1_kernel_1acba51ae50a96e1a997d1092875ccdd09" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool banita::Kernel::exit</definition>
        <argsstring></argsstring>
        <name>exit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="headers/Kernel.hpp" line="34" column="1" bodyfile="headers/Kernel.hpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/d5d/classbanita_1_1_kernel_1a0ca58b4efbcd007ac2e8babb794aa2d9" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool banita::Kernel::isPaused</definition>
        <argsstring></argsstring>
        <name>isPaused</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="headers/Kernel.hpp" line="35" column="1" bodyfile="headers/Kernel.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d6/d5d/classbanita_1_1_kernel_1a07f2a762b74482c2e384c84531151cf4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>banita::Kernel::Kernel</definition>
        <argsstring>()</argsstring>
        <name>Kernel</name>
        <briefdescription>
<para>Construct a new <ref refid="d6/d5d/classbanita_1_1_kernel" kindref="compound">Kernel</ref> object by default. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="headers/Kernel.hpp" line="43" column="1" bodyfile="headers/Kernel.hpp" bodystart="43" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="d6/d5d/classbanita_1_1_kernel_1ad0fef1effc29769a6438653e86e04b25" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>banita::Kernel::Kernel</definition>
        <argsstring>(Scene *_scene)</argsstring>
        <name>Kernel</name>
        <param>
          <type><ref refid="da/d56/classbanita_1_1_scene" kindref="compound">Scene</ref> *</type>
          <declname>_scene</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="d6/d5d/classbanita_1_1_kernel" kindref="compound">Kernel</ref> object and store the pointer to the scene received. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_scene</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="headers/Kernel.hpp" line="50" column="1" bodyfile="headers/Kernel.hpp" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="d6/d5d/classbanita_1_1_kernel_1a76d732a249e2b546288488af3fa7f928" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>banita::Kernel::~Kernel</definition>
        <argsstring>()</argsstring>
        <name>~Kernel</name>
        <briefdescription>
<para>Destroy the <ref refid="d6/d5d/classbanita_1_1_kernel" kindref="compound">Kernel</ref> object and destroy the tasks that store. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="headers/Kernel.hpp" line="56" column="1" bodyfile="headers/Kernel.hpp" bodystart="56" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="d6/d5d/classbanita_1_1_kernel_1af596d1e111f5d7dd9d9e483eda630695" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void banita::Kernel::run</definition>
        <argsstring>()</argsstring>
        <name>run</name>
        <briefdescription>
<para>run the kernel </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="headers/Kernel.hpp" line="67" column="1"/>
        <referencedby refid="da/d56/classbanita_1_1_scene_1aaf3588951958ee81114f0e58e5aead92" compoundref="d0/d8f/_scene_8hpp" startline="71" endline="74">banita::Scene::execute</referencedby>
      </memberdef>
      <memberdef kind="function" id="d6/d5d/classbanita_1_1_kernel_1a69c51724e7192464b086b3c357fdcb7f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void banita::Kernel::pause</definition>
        <argsstring>()</argsstring>
        <name>pause</name>
        <briefdescription>
<para>pause the kernel </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="headers/Kernel.hpp" line="73" column="1" bodyfile="headers/Kernel.hpp" bodystart="73" bodyend="76"/>
        <referencedby refid="da/d56/classbanita_1_1_scene_1a0b6fe86bd75f0baa4b7d8e259a8ebf07" compoundref="d0/d8f/_scene_8hpp" startline="80" endline="83">banita::Scene::pause</referencedby>
      </memberdef>
      <memberdef kind="function" id="d6/d5d/classbanita_1_1_kernel_1aee9ff2e2d1816a4b3c1ef2694034e0ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void banita::Kernel::stop</definition>
        <argsstring>()</argsstring>
        <name>stop</name>
        <briefdescription>
<para>stop the kernel </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="headers/Kernel.hpp" line="82" column="1" bodyfile="headers/Kernel.hpp" bodystart="82" bodyend="85"/>
        <referencedby refid="da/d56/classbanita_1_1_scene_1a1c17873d5172df34c9a6a62dc3b13fa6" compoundref="d0/d8f/_scene_8hpp" startline="55" endline="63">banita::Scene::~Scene</referencedby>
        <referencedby refid="da/d56/classbanita_1_1_scene_1ad27b01f5b3a31a7fb81f5ec7dc6c63c6" compoundref="d0/d8f/_scene_8hpp" startline="89" endline="92">banita::Scene::stop</referencedby>
      </memberdef>
      <memberdef kind="function" id="d6/d5d/classbanita_1_1_kernel_1a51ad67eb5beec04052643a58698a1263" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void banita::Kernel::add_task</definition>
        <argsstring>(Task &amp;_task)</argsstring>
        <name>add_task</name>
        <param>
          <type><ref refid="d8/dfd/classbanita_1_1_task" kindref="compound">Task</ref> &amp;</type>
          <declname>_task</declname>
        </param>
        <briefdescription>
<para>adds a task to the tasks set </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_task</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="headers/Kernel.hpp" line="113" column="1" bodyfile="headers/Kernel.hpp" bodystart="113" bodyend="117"/>
        <references refid="d8/dfd/classbanita_1_1_task_1a2f8babba8f085c5a65b58eaf2f73c121" compoundref="d6/d1e/_task_8hpp" startline="73" endline="76">banita::Task::set_kernel</references>
      </memberdef>
      <memberdef kind="function" id="d6/d5d/classbanita_1_1_kernel_1a50aee62acd308f995925dab46106ef75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void banita::Kernel::add_tasks</definition>
        <argsstring>(Task *_taskArray, Size_t _arraySize)</argsstring>
        <name>add_tasks</name>
        <param>
          <type><ref refid="d8/dfd/classbanita_1_1_task" kindref="compound">Task</ref> *</type>
          <declname>_taskArray</declname>
        </param>
        <param>
          <type>Size_t</type>
          <declname>_arraySize</declname>
        </param>
        <briefdescription>
<para>adds an array of tasks to the current tasks set </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_taskArray</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_arraySize</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="headers/Kernel.hpp" line="125" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d5d/classbanita_1_1_kernel_1aad63c1940db1247c8ba02fb84f78ec1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void banita::Kernel::add_tasks</definition>
        <argsstring>(Task_Set &amp;_tasks)</argsstring>
        <name>add_tasks</name>
        <param>
          <type>Task_Set &amp;</type>
          <declname>_tasks</declname>
        </param>
        <briefdescription>
<para>adds a set of tasks to the current tasks set </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_tasks</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="headers/Kernel.hpp" line="132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d5d/classbanita_1_1_kernel_1a463aa154233f381167fc18f6e754b084" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void banita::Kernel::remove_task</definition>
        <argsstring>(Task &amp;_task)</argsstring>
        <name>remove_task</name>
        <param>
          <type><ref refid="d8/dfd/classbanita_1_1_task" kindref="compound">Task</ref> &amp;</type>
          <declname>_task</declname>
        </param>
        <briefdescription>
<para>removes an specific task from the tasks set </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_task</parametername>
</parameternamelist>
<parameterdescription>
<para>task to remove </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="headers/Kernel.hpp" line="139" column="1" bodyfile="headers/Kernel.hpp" bodystart="139" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="d6/d5d/classbanita_1_1_kernel_1a7d940a9448b56f01eb2ca1bc415b661f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool banita::Kernel::is_paused</definition>
        <argsstring>()</argsstring>
        <name>is_paused</name>
        <briefdescription>
<para>get the pause state object </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true </para>
</simplesect>
<simplesect kind="return"><para>false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="headers/Kernel.hpp" line="152" column="1" bodyfile="headers/Kernel.hpp" bodystart="152" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="d6/d5d/classbanita_1_1_kernel_1a0a5e53e8727da203aad7dcb730a39244" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="da/d56/classbanita_1_1_scene" kindref="compound">Scene</ref> *</type>
        <definition>Scene* banita::Kernel::get_scene</definition>
        <argsstring>()</argsstring>
        <name>get_scene</name>
        <briefdescription>
<para>Get the scene object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Scene* </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="headers/Kernel.hpp" line="162" column="1" bodyfile="headers/Kernel.hpp" bodystart="162" bodyend="165"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d6/d5d/classbanita_1_1_kernel_1aee57868ae06093b8f6d836530803f2df" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void banita::Kernel::initialize_tasks</definition>
        <argsstring>()</argsstring>
        <name>initialize_tasks</name>
        <briefdescription>
<para>initialize the tasks </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="headers/Kernel.hpp" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d5d/classbanita_1_1_kernel_1a43e188a08a8273f32a018b73c88d7e29" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void banita::Kernel::execute_tasks</definition>
        <argsstring>()</argsstring>
        <name>execute_tasks</name>
        <briefdescription>
<para>update the tasks </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="headers/Kernel.hpp" line="98" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d5d/classbanita_1_1_kernel_1ad9662c620f97b2f4fb07481344cde0ba" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void banita::Kernel::terminate_tasks</definition>
        <argsstring>()</argsstring>
        <name>terminate_tasks</name>
        <briefdescription>
<para>finalize the tasks </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="headers/Kernel.hpp" line="104" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="d6/d5d/classbanita_1_1_kernel_1a32e78faeb3605d236939d4e7182fae23" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool banita::Kernel::task_priority_comparator_lower_than</definition>
        <argsstring>(const Task *_task1, const Task *_task2)</argsstring>
        <name>task_priority_comparator_lower_than</name>
        <param>
          <type>const <ref refid="d8/dfd/classbanita_1_1_task" kindref="compound">Task</ref> *</type>
          <declname>_task1</declname>
        </param>
        <param>
          <type>const <ref refid="d8/dfd/classbanita_1_1_task" kindref="compound">Task</ref> *</type>
          <declname>_task2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="headers/Kernel.hpp" line="170" column="1" bodyfile="headers/Kernel.hpp" bodystart="170" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="d6/d5d/classbanita_1_1_kernel_1a7bddd1303197058cc83fb4c78adfe2d8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool banita::Kernel::task_comparator_greater_than</definition>
        <argsstring>(const Task *_task1, const Task *_task2)</argsstring>
        <name>task_comparator_greater_than</name>
        <param>
          <type>const <ref refid="d8/dfd/classbanita_1_1_task" kindref="compound">Task</ref> *</type>
          <declname>_task1</declname>
        </param>
        <param>
          <type>const <ref refid="d8/dfd/classbanita_1_1_task" kindref="compound">Task</ref> *</type>
          <declname>_task2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="headers/Kernel.hpp" line="175" column="1" bodyfile="headers/Kernel.hpp" bodystart="175" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="d6/d5d/classbanita_1_1_kernel_1a84ff44eb0c0d6d01073e01b1aa2c6c55" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool banita::Kernel::task_comparator_lower_or_equal_than</definition>
        <argsstring>(const Task *_task1, const Task *_task2)</argsstring>
        <name>task_comparator_lower_or_equal_than</name>
        <param>
          <type>const <ref refid="d8/dfd/classbanita_1_1_task" kindref="compound">Task</ref> *</type>
          <declname>_task1</declname>
        </param>
        <param>
          <type>const <ref refid="d8/dfd/classbanita_1_1_task" kindref="compound">Task</ref> *</type>
          <declname>_task2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="headers/Kernel.hpp" line="180" column="1" bodyfile="headers/Kernel.hpp" bodystart="180" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="d6/d5d/classbanita_1_1_kernel_1a4f86a08b65bb2dee12329ddb9ec127a9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool banita::Kernel::task_comparator_greater_or_equal_than</definition>
        <argsstring>(const Task *_task1, const Task *_task2)</argsstring>
        <name>task_comparator_greater_or_equal_than</name>
        <param>
          <type>const <ref refid="d8/dfd/classbanita_1_1_task" kindref="compound">Task</ref> *</type>
          <declname>_task1</declname>
        </param>
        <param>
          <type>const <ref refid="d8/dfd/classbanita_1_1_task" kindref="compound">Task</ref> *</type>
          <declname>_task2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="headers/Kernel.hpp" line="185" column="1" bodyfile="headers/Kernel.hpp" bodystart="185" bodyend="188"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="headers/Kernel.hpp" line="24" column="1" bodyfile="headers/Kernel.hpp" bodystart="23" bodyend="189"/>
    <listofallmembers>
      <member refid="d6/d5d/classbanita_1_1_kernel_1a51ad67eb5beec04052643a58698a1263" prot="public" virt="non-virtual"><scope>banita::Kernel</scope><name>add_task</name></member>
      <member refid="d6/d5d/classbanita_1_1_kernel_1a50aee62acd308f995925dab46106ef75" prot="public" virt="non-virtual"><scope>banita::Kernel</scope><name>add_tasks</name></member>
      <member refid="d6/d5d/classbanita_1_1_kernel_1aad63c1940db1247c8ba02fb84f78ec1f" prot="public" virt="non-virtual"><scope>banita::Kernel</scope><name>add_tasks</name></member>
      <member refid="d6/d5d/classbanita_1_1_kernel_1a43e188a08a8273f32a018b73c88d7e29" prot="private" virt="non-virtual"><scope>banita::Kernel</scope><name>execute_tasks</name></member>
      <member refid="d6/d5d/classbanita_1_1_kernel_1acba51ae50a96e1a997d1092875ccdd09" prot="private" virt="non-virtual"><scope>banita::Kernel</scope><name>exit</name></member>
      <member refid="d6/d5d/classbanita_1_1_kernel_1a0a5e53e8727da203aad7dcb730a39244" prot="public" virt="non-virtual"><scope>banita::Kernel</scope><name>get_scene</name></member>
      <member refid="d6/d5d/classbanita_1_1_kernel_1aee57868ae06093b8f6d836530803f2df" prot="private" virt="non-virtual"><scope>banita::Kernel</scope><name>initialize_tasks</name></member>
      <member refid="d6/d5d/classbanita_1_1_kernel_1a7d940a9448b56f01eb2ca1bc415b661f" prot="public" virt="non-virtual"><scope>banita::Kernel</scope><name>is_paused</name></member>
      <member refid="d6/d5d/classbanita_1_1_kernel_1a0ca58b4efbcd007ac2e8babb794aa2d9" prot="private" virt="non-virtual"><scope>banita::Kernel</scope><name>isPaused</name></member>
      <member refid="d6/d5d/classbanita_1_1_kernel_1a07f2a762b74482c2e384c84531151cf4" prot="public" virt="non-virtual"><scope>banita::Kernel</scope><name>Kernel</name></member>
      <member refid="d6/d5d/classbanita_1_1_kernel_1ad0fef1effc29769a6438653e86e04b25" prot="public" virt="non-virtual"><scope>banita::Kernel</scope><name>Kernel</name></member>
      <member refid="d6/d5d/classbanita_1_1_kernel_1a69c51724e7192464b086b3c357fdcb7f" prot="public" virt="non-virtual"><scope>banita::Kernel</scope><name>pause</name></member>
      <member refid="d6/d5d/classbanita_1_1_kernel_1a463aa154233f381167fc18f6e754b084" prot="public" virt="non-virtual"><scope>banita::Kernel</scope><name>remove_task</name></member>
      <member refid="d6/d5d/classbanita_1_1_kernel_1af596d1e111f5d7dd9d9e483eda630695" prot="public" virt="non-virtual"><scope>banita::Kernel</scope><name>run</name></member>
      <member refid="d6/d5d/classbanita_1_1_kernel_1a5b82b4ee2beeef6ae32c2a8e0da71c7e" prot="private" virt="non-virtual"><scope>banita::Kernel</scope><name>scene</name></member>
      <member refid="d6/d5d/classbanita_1_1_kernel_1aee9ff2e2d1816a4b3c1ef2694034e0ce" prot="public" virt="non-virtual"><scope>banita::Kernel</scope><name>stop</name></member>
      <member refid="d6/d5d/classbanita_1_1_kernel_1a4f86a08b65bb2dee12329ddb9ec127a9" prot="public" virt="non-virtual"><scope>banita::Kernel</scope><name>task_comparator_greater_or_equal_than</name></member>
      <member refid="d6/d5d/classbanita_1_1_kernel_1a7bddd1303197058cc83fb4c78adfe2d8" prot="public" virt="non-virtual"><scope>banita::Kernel</scope><name>task_comparator_greater_than</name></member>
      <member refid="d6/d5d/classbanita_1_1_kernel_1a84ff44eb0c0d6d01073e01b1aa2c6c55" prot="public" virt="non-virtual"><scope>banita::Kernel</scope><name>task_comparator_lower_or_equal_than</name></member>
      <member refid="d6/d5d/classbanita_1_1_kernel_1a32e78faeb3605d236939d4e7182fae23" prot="public" virt="non-virtual"><scope>banita::Kernel</scope><name>task_priority_comparator_lower_than</name></member>
      <member refid="d6/d5d/classbanita_1_1_kernel_1a0ba07b0f218ce93f31fc53feb9905354" prot="private" virt="non-virtual"><scope>banita::Kernel</scope><name>Task_Set</name></member>
      <member refid="d6/d5d/classbanita_1_1_kernel_1a5c6be97e502b13a7edbcd3890e453275" prot="private" virt="non-virtual"><scope>banita::Kernel</scope><name>tasks</name></member>
      <member refid="d6/d5d/classbanita_1_1_kernel_1ad9662c620f97b2f4fb07481344cde0ba" prot="private" virt="non-virtual"><scope>banita::Kernel</scope><name>terminate_tasks</name></member>
      <member refid="d6/d5d/classbanita_1_1_kernel_1a8022e824208332e6df1aa8aecf3b0ed6" prot="private" virt="non-virtual"><scope>banita::Kernel</scope><name>time</name></member>
      <member refid="d6/d5d/classbanita_1_1_kernel_1a1936c88e7bd16ac2d88ce3e8e99d6ad0" prot="private" virt="non-virtual"><scope>banita::Kernel</scope><name>timer</name></member>
      <member refid="d6/d5d/classbanita_1_1_kernel_1a76d732a249e2b546288488af3fa7f928" prot="public" virt="non-virtual"><scope>banita::Kernel</scope><name>~Kernel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
